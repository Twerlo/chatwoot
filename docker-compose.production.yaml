version: '3'

services:
  base: &base
    image: twerlo/zafy:latest
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    env_file: .env ## Change this file for customized env variables
    volumes:
      - app_data:/app/storage

  app:
    <<: *base
    depends_on:
      - postgres
      - redis
    ports:
      - '127.0.0.1:3000:3000'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    restart: always

  sidekiq:
    <<: *base
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
    restart: always

  postgres:
    image: postgres:12
    restart: always
    ports:
      - '127.0.0.1:5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=zafy_db
      - POSTGRES_USER=postgres
      # Please provide your own password.
      - POSTGRES_PASSWORD=

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - redis_data:/data
    ports:
      - '127.0.0.1:6379:6379'

  caddy:
    image: caddy/caddy
    container_name: caddy
    depends_on:
    - "hasura_gql"
    restart: always
    ports:
      - "80:80"
      - "443:443"
    environment:
      - APP_DOMAIN_NAME=${APP_DOMAIN_NAME}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_certs:/root/.caddy

  watchtower:
    image: containrrr/watchtower
    command:
      - "--cleanup"
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    env_file:
      - .env
    environment:
      - REPO_USER=${DOCKERHUB_USER}
      - REPO_PASS=${DOCKERHUB_PASS}
      - WATCHTOWER_POLL_INTERVAL=60
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: "watchtower"

volumes:
  caddy_certs:
  app_data:
  db_data:
  redis_data:
